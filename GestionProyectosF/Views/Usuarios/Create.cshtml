@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model GestionProyectosB.Modelo.Usuarios

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Usuario</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>

        body {
            background: url('../../imagen/data-visualization-for-project-management-vw4gow5w6tyzaygb.jpg') no-repeat center center fixed;
            background-size: cover;
        }

        .form-container {
            background: #ffffff;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #1877f2;
        }

            .card-header h4 {
                font-weight: bold;
            }

        .btn-primary {
            background-color: #1877f2;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0094ff;
            }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="col-md-6">
            <div class="form-container">
                <div class="card-header text-white text-center mb-auto">
                    <h4>Crear Usuario</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Nombre, "Nombre", new { @class = "form-label" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, "Correo Electrónico", new { @class = "form-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Rol, "Rol", new { @class = "form-label" })
                            @Html.DropDownListFor(
                                model => model.Rol,
                                new SelectList(new[] { "Administrador", "Miembro" }),
                                "-- Seleccionar Rol --",
                                new { @class = "form-control", required = "required" }
                            )
                            @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Contraseña, "Contraseña", new { @class = "form-label" })
                            @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control", type = "password", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.FechaRegistro, "Fecha de Registro", new { @class = "form-label", required = "required" })
                            @Html.TextBoxFor(
                                model => model.FechaRegistro,
                                "{0:yyyy-MM-dd}", // Formato de fecha
                                new { @class = "form-control", type = "date", required = "required" }
                            )
                            @Html.ValidationMessageFor(model => model.FechaRegistro, "", new { @class = "text-danger" })
                        </div>

                        <div class="text-center text-white">
                            <input type="submit" value="Crear Usuario" class="btn btn-primary btn-lg w-100 mb-3" />
                            <a href="@Url.Action("Login", "Login")" class="btn btn-secondary w-100">Cancelar</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="messageModalLabel">Información</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <span id="modalMessage"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Script para manejar el Modal -->
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const message = '@TempData["Message"]';
        const messageType = '@TempData["MessageType"]';

        if (message) {
            const modalMessage = document.getElementById("modalMessage");
            modalMessage.textContent = message;

            if (messageType === "success") {
                modalMessage.style.color = "green";
            } else if (messageType === "danger") {
                modalMessage.style.color = "red";
            }

            const messageModal = new bootstrap.Modal(document.getElementById("messageModal"));
            messageModal.show();
        }
    });
    </script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
